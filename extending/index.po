# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Chris Abramowicz, 2022
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:06+0000\n"
"PO-Revision-Date: 2020-05-30 11:53+0000\n"
"Last-Translator: Chris Abramowicz, 2022\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n"
"%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n"
"%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid "Extending and Embedding the Python Interpreter"
msgstr "Rozszerzony i wbudowany interpreter Python"

msgid ""
"This document describes how to write modules in C or C++ to extend the "
"Python interpreter with new modules.  Those modules can not only define new "
"functions but also new object types and their methods.  The document also "
"describes how to embed the Python interpreter in another application, for "
"use as an extension language.  Finally, it shows how to compile and link "
"extension modules so that they can be loaded dynamically (at run time) into "
"the interpreter, if the underlying operating system supports this feature."
msgstr ""
"Ten dokument opisuje jak pisać moduły w C lub C++ do rozszerzania Python "
"Interpreter o nowe moduły. Te moduły mogą nie tylko zawierać nowe funkcje, "
"ale też nowe obiekty i ich metody. Dokument również zawiera opis jak "
"wbudować interpreter Pyhona do innej aplikacji w celu rozszerzenia języka.  "
"Podsumowując pokażemy ci jak kompilować i linkować rozszerzone moduły, tak "
"że mogą być załadowane dynamicznie w danej chwili przez interpreter, o ile "
"dany system operacyjny wspiera tą funkcję."

msgid ""
"This document assumes basic knowledge about Python.  For an informal "
"introduction to the language, see :ref:`tutorial-index`.  :ref:`reference-"
"index` gives a more formal definition of the language.  :ref:`library-index` "
"documents the existing object types, functions and modules (both built-in "
"and written in Python) that give the language its wide application range."
msgstr ""
"Ten document zawiera podstawową wiedzę o Python. Z nieformalnym wstępem do "
"języka zapoznaj się z: ref:`tutorial-index`. :ref:`reference-index` , które "
"zawierają bardziej formalny opis języka. :ref:`library-index` documents "
"zawierają istniejące object types, funkcje i modules wbudowane w python. "
"Daje to duże pole zastosowań."

msgid ""
"For a detailed description of the whole Python/C API, see the separate :ref:"
"`c-api-index`."
msgstr ""
"Aby zapoznać się z dokładną instrukcją dla Python/C API, spójrz na : ref:`c-"
"api-index`."

msgid "Recommended third party tools"
msgstr "Rekomendowane zewnętrzne narzędzia."

msgid ""
"This guide only covers the basic tools for creating extensions provided as "
"part of this version of CPython. Third party tools like `Cython <http://"
"cython.org/>`_, `cffi <https://cffi.readthedocs.io>`_, `SWIG <http://www."
"swig.org>`_ and `Numba <https://numba.pydata.org/>`_ offer both simpler and "
"more sophisticated approaches to creating C and C++ extensions for Python."
msgstr ""
"Ten przewodnik obejmuje tylko podstawowe narzędzia do tworzenia rozszerzeń "
"dostarczane jako część aktualnej wersji CPython. Narzędzia innych firm, "
"takie jak \" Cython <http://cython.org/>'_, ' Cffi <https://cffi.readthedocs."
"io>`_,' SWIG <http://www.swig.org > ` _ i 'Numba <https://numba.pydata.org / "
">' _ oferują zarówno prostsze, jak i bardziej wyrafinowane podejście do "
"tworzenia rozszerzeń C i C++ dla Pythona."

msgid ""
"`Python Packaging User Guide: Binary Extensions <https://packaging.python."
"org/guides/packaging-binary-extensions/>`_"
msgstr ""

msgid ""
"The Python Packaging User Guide not only covers several available tools that "
"simplify the creation of binary extensions, but also discusses the various "
"reasons why creating an extension module may be desirable in the first place."
msgstr ""

msgid "Creating extensions without third party tools"
msgstr "Tworzenie rozszerzeń poprzez narzędzia zewnętrzne."

msgid ""
"This section of the guide covers creating C and C++ extensions without "
"assistance from third party tools. It is intended primarily for creators of "
"those tools, rather than being a recommended way to create your own C "
"extensions."
msgstr ""

msgid "Embedding the CPython runtime in a larger application"
msgstr "Wbudowywanie runtime Cpython w większą aplikację."

msgid ""
"Sometimes, rather than creating an extension that runs inside the Python "
"interpreter as the main application, it is desirable to instead embed the "
"CPython runtime inside a larger application. This section covers some of the "
"details involved in doing that successfully."
msgstr ""
